#!/bin/bash
# Two monitors, secondary on the left or on the right.
# Usage: display-2-secondary {left|right}.

# Directory of current script.
DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" > /dev/null && pwd)"

source "$DIR/display-utilities"

# Usage: display_secondary_on {--left-of|--right-of}
display_secondary_on()
{
    POSITION="$1"
    HOST=$(hostname -f)

    if [[ "$HOST" = pcgael ]]; then
        # eDP1 = laptop screen
        PRIMARY=eDP1
        SECONDARY=$(best_connected HDMI3 DP1 DP2 VGA1 HDMI1 HDMI2)
    elif [[ "$HOST" = pcgael2 ]]; then
        PRIMARY=eDP1
        SECONDARY=$(best_connected HDMI3 DP1 DP2 VGA1 HDMI1 HDMI2)
    elif [[ "$HOST" = pcgael3 ]]; then
        PRIMARY=DVI-D-0
        SECONDARY=$(best_connected DP-0 DP-1 HDMI-0)
    elif [[ "$HOST" = pcgael4 ]]; then
        PRIMARY=eDP-1
        SECONDARY=$(best_connected DP-1 HDMI-1)
    else
        exit 1
    fi

    # Turn off all outputs not being cited as primary or secondary.
    for OUTPUT in $(all_outputs_except $PRIMARY); do
        if [[ "$OUTPUT " != "$SECONDARY" ]]; then
            xrandr --output "$OUTPUT" --off
        fi
    done

    if [[ -z "$SECONDARY" ]]; then
        xrandr \
            --output "$PRIMARY" --auto --primary
    else
        xrandr \
            --output "$PRIMARY" --auto --primary \
            --output "$SECONDARY" --auto $POSITION "$PRIMARY"
    fi
}

if [[ "$1" = left ]]; then
    display_secondary_on --left-of
elif [[ "$1" = right ]]; then
    display_secondary_on --right-of
else
    echo Usage: $0 '{left|right}' 1>&2
fi

